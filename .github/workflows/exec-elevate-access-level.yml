name: 'IssueOps - Elevate-acess-level'

on:
  workflow_call:
    inputs:
      issue-title: 
        description: "The title of the issue"
        type: "string"
      issue-body: 
         description: "The body of the issue"
         type: "string"
      issue-number:
         description: "The number of the issue"
         type: "string"
      dashboard-repo:
        description: "Target repo to submit package version report as HTML"
        type: "string"
      metrics-provider:
        description: "The metrics provider to be used"
        type: "string"
      event: 
         description: The event that triggered the workflow_call
         type: "string"
      sfopsbot-app-id: 
         description: The App id of the bot used for this workflow_call
         type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"


jobs: 
  issue-analyzer:
    runs-on: ubuntu-latest
    name: 'Process Elevate Acces level Issue'
    if: contains(  inputs.issue-body , 'Provide the access level required that you need to be elevated to')
    outputs:
      hours: ${{ steps.process-issue-response.outputs.hours }}
      username: ${{ steps.process-issue-response.outputs.username }}
      accessLevel: ${{ steps.process-issue-response.outputs.accessLevel }}
      devConfigFile: ${{ steps.process-issue-response.outputs.devConfigFile }}
    steps:

      - uses: actions/checkout@v3

      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
         owner: ${{ github.repository_owner }}


      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/request-elevated-previleges.yml     


      - uses: actions/github-script@v6
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ inputs.issue-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ "ops", "ops-request-elevated-privileges"]
            })


      - name: Find Comment with Succesfull message for issue_closed
        uses: peter-evans/find-comment@v2
        if: ${{ inputs.event  == 'issue_closed' }}
        id: fc
        with:
          issue-number: ${{ github.event.issue.number }}
          body-includes: <!--elevated successfully-->
          direction: last
          token: ${{ steps.app-token.outputs.token }}


      - name: Only continue if the comment is found when issue is closed
        id: process_comment_info
        if: steps.fc.outputs.comment-body == '' &&  inputs.event  == 'issue_closed' 
        run: |
          echo "The earlier process was not succesfull, so we will not proceed with the de-elevation"
          exit 1

      - name: Process input and set output
        id: process-issue-response
        run: |
          hours=${{ steps.issue-parser.outputs.issueparser_duration }}
          re='^[0-9]+$'
          if [[ -z $hours ]] || ! [[ $hours =~ $re ]]; then
            # If hours is empty or not numeric, fall back to default value
            hours=1
          elif [[ $hours -gt 48 ]]; then
            # If hours is greater than 48, fall back to default value
            hours=48
          fi
          echo "hours=$hours" >> "$GITHUB_OUTPUT"

          # Fail the step if username is empty
          if [ -z "${{ steps.issue-parser.outputs.issueparser_username }}" ]; then
            echo "Username is required."
            exit 1
          else
            echo "username=${{ steps.issue-parser.outputs.issueparser_username }}" >> "$GITHUB_OUTPUT"
          fi

          # Fail the step if accessLevel is empty
          if [ -z "${{ steps.issue-parser.outputs.issueparser_accessLevel }}" ]; then
            echo "Access level is required."
            exit 1
          else
            echo "accessLevel=${{ steps.issue-parser.outputs.issueparser_accessLevel }}" >> "$GITHUB_OUTPUT"
          fi

          # Check for devConfigFile value
          devConfigFile=${{ steps.issue-parser.outputs.issueparser_devConfigFile }}
          if [ -z "$devConfigFile" ]; then
            devConfigFile='config/devconfig.yaml' # Default value
          fi

          # Check if the devConfigFile exists
          if [ ! -f "$devConfigFile" ]; then
            echo "$devConfigFile does not exist."
            exit 1
          fi
          echo "devConfigFile=$devConfigFile" >> "$GITHUB_OUTPUT"

      - name: Create Comment if inputs are bad
        uses: peter-evans/create-or-update-comment@v3
        if: failure()
        with:
          issue-number: ${{ inputs.issue-number }}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Please check the inputs provided in your issue. Make sure all required fields are filled correctly.
  
            [1]: This issue is being processed by [sfops ðŸ¤–]

      - name: Create Comment before initiating action
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ inputs.event  == 'issue_open' }}
        with:
          issue-number: ${{ inputs.issue-number }}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Your request has been received and is being processed. 

            sfops bot will attempt to elevate for user ${{ steps.issue-parser.outputs.issueparser_username }}  in production to the level ${{ steps.issue-parser.outputs.issueparser_accessLevel}}

            The access wil be valid for a duration of ${{ steps.process-issue-response.outputs.hours}} hours 
          
            <!-- hours: ${{ steps.process-issue-response.outputs.hours}} -->
            
            The job be tracked with run of action at this link: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            [1]: This issue is being processed by [sfops ðŸ¤–]

  elevate_action:
    name: 'Elevate  User'
    needs: issue-analyzer
    uses:  bendoya-project/sfops-gh-actions/.github/workflows/switch-to-elevated-access-level.yml@main
    if: ${{ inputs.event  == 'issue_open' }}
    with:
      username: ${{ needs.issue-analyzer.outputs.username }}
      devConfigFile : ${{ needs.issue-analyzer.outputs.devConfigFile }}
      accessLevel: ${{ needs.issue-analyzer.outputs.accessLevel }}
    secrets:
       DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
       DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
       DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}  

  delevate_action:
    name: 'De Elevate  User'
    needs: issue-analyzer
    uses:  bendoya-project/sfops-gh-actions/.github/workflows/switch-to-default-access-level.yml@main
    if: ${{ inputs.event  == 'issue_closed' }}
    with:
      username: ${{ needs.issue-analyzer.outputs.username }}
      devConfigFile : ${{ needs.issue-analyzer.outputs.devConfigFile }}
    secrets:
       DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
       DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
       DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}  
    
  log-elevation-success:
    runs-on: ubuntu-latest
    needs: 
    - issue-analyzer
    - elevate_action
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
         owner: ${{ github.repository_owner }}

      - name: Create Comment for successfull processing
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.issue-number }}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            <!--elevated successfully-->
            Your request for username ${{ needs.issue-analyzer.outputs.username }} has been successfully elevated to the ${{ needs.issue-analyzer.outputs.accessLevel }} level. 

            [1]: This issue is being processed by [sfops ðŸ¤–]

  log-elevation-failure:
    runs-on: ubuntu-latest
    needs: 
      - issue-analyzer
      - elevate_action
    if: failure() && needs.delevate_action.result == 'failure'
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
         owner: ${{ github.repository_owner }}

      - name: Create Comment for elevation failure
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.issue-number }}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Your request for username ${{ needs.issue-analyzer.outputs.username }} has been successfully elevated to the ${{ needs.issue-analyzer.outputs.accessLevel }} level. 

            [1]: This issue is being processed by [sfops ðŸ¤–]

  log-deelevation-success:
    runs-on: ubuntu-latest
    needs: 
     - issue-analyzer
     - delevate_action
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
         owner: ${{ github.repository_owner }}

      - name: Create Comment for successfull processing
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.issue-number }}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            The elevated access has been successfully de-elevated for username ${{ needs.issue-analyzer.outputs.username }}. 

            Please check the action logs for more details at https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            [1]: This issue is being processed by [sfops ðŸ¤–]

  log-deelevation-failure:
    runs-on: ubuntu-latest
    needs: 
      - issue-analyzer
      - delevate_action
    if: failure() && needs.delevate_action.result == 'failure'
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
         owner: ${{ github.repository_owner }}

      - name: Reopen Issue if de-elevation failed
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          gh issue reopen  ${{ github.event.issue.number }}    
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Create Comment for de-elevation failure
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.issue-number }}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            There was an issue de-elevating the access for username ${{ needs.issue-analyzer.outputs.username }} to the default level. 
            
            Please check the action logs for more details at https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            [1]: This issue is being processed by [sfops ðŸ¤–]
